{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>  Add native postgis support to strapi.   </p>"},{"location":"#under-development","title":"Under Development","text":""},{"location":"#how-does-it-work","title":"How does it work?","text":"<p>Since Strapi does not support native database formats I convert requests before they being sent to the querybuilder and convert all the geometry objects to the <code>geojson</code>. </p>"},{"location":"#installation","title":"Installation","text":"<p>Setup your strapi app as usual</p> <pre><code>npx create-strapi-app@latest my-project --quickstart\n</code></pre> <p>Install <code>pg</code> and <code>strapi-plugin-postgis</code> </p> <pre><code>npm install pg --save\nnpm i strapi-plugin-postgis\n\n</code></pre> <p>Make sure to config your strapi to use <code>postgrs</code> database as backend, Use this link in case you need any help with this step (https://strapi.io/blog/postgre-sql-and-strapi-setup)</p> <p>Modify your middlewares as following to let strapi load <code>osm</code> tiles. Add <code>'*.tile.openstreetmap.org'</code> to the <code>img-src</code> as follows</p> <pre><code>// ./config/middlewares.js\nmodule.exports = [\n  'strapi::errors',\n  {\n    name: 'strapi::security',\n    config: {\n      contentSecurityPolicy: {\n        useDefaults: true,\n        directives: {\n          'img-src': [\"'self'\", 'data:', 'blob:', '*.tile.openstreetmap.org'],\n          upgradeInsecureRequests: null,\n        },\n      },\n    },\n  },\n  'strapi::cors',\n  'strapi::poweredBy',\n  'strapi::logger',\n  'strapi::query',\n  'strapi::body',\n  'strapi::session',\n  'strapi::favicon',\n  'strapi::public',\n];\n\n\n</code></pre> <p>Now in your api folder modify <code>content-types</code> and add a new column with the following format</p> <pre><code>{\n  \"kind\": \"collectionType\",\n  .\n  .\n  .\n  \"attributes\": {\n  .\n  .\n  .\n    \"geom\": { //--&gt; your column name. you can change to anything\n      \"columnType\": {\n        \"type\": \"specificType\",\n        \"args\": [\n          \"geometry(POINT,4326)\" //-&gt; change this line according to the Supported Data Types section\n        ]\n      },\n      \"type\": \"json\", //-&gt;don't change this\n      \"fieldRenderer\": \"postgis\" //-&gt;don't change this\n    }\n  }\n}\n\n</code></pre>"},{"location":"#supported-data-types","title":"Supported Data Types","text":""},{"location":"#point0-0","title":"POINT(0 0)","text":"<pre><code>\"geom\": {\n      \"columnType\": {\n        \"type\": \"specificType\",\n        \"args\": [\n          \"geometry(POINT,4326)\"\n        ]\n      },\n      \"type\": \"json\",\n      \"fieldRenderer\": \"postgis\"\n    }\n\n</code></pre> <p>POINT Z (0 0 0)</p> <p>POINT ZM (0 0 0 0)</p> <p>POINT EMPTY</p>"},{"location":"#linestring0-01-11-2","title":"LINESTRING(0 0,1 1,1 2)","text":"<pre><code>    \"g_line\": {\n      \"columnType\": {\n        \"type\": \"specificType\",\n        \"args\": [\n          \"geometry(LINESTRING,4326)\"\n        ]\n      },\n      \"type\": \"json\",\n      \"fieldRenderer\": \"postgis\"\n    }\n\n\n</code></pre> <p>LINESTRING EMPTY</p>"},{"location":"#polygon0-04-04-40-40-01-1-2-1-2-2-1-21-1","title":"POLYGON((0 0,4 0,4 4,0 4,0 0),(1 1, 2 1, 2 2, 1 2,1 1))","text":"<pre><code>    \"g_polygon\": {\n      \"columnType\": {\n        \"type\": \"specificType\",\n        \"args\": [\n          \"geometry(POLYGON,4326)\"\n        ]\n      },\n      \"type\": \"json\",\n      \"fieldRenderer\": \"postgis\"\n    }\n\n</code></pre> <p>MULTIPOINT((0 0),(1 2))</p> <p>MULTIPOINT Z ((0 0 0),(1 2 3))</p> <p>MULTIPOINT EMPTY</p> <p>MULTILINESTRING((0 0,1 1,1 2),(2 3,3 2,5 4))</p> <p>MULTIPOLYGON(((0 0,4 0,4 4,0 4,0 0),(1 1,2 1,2 2,1 2,1 1)), ((-1 -1,-1 -2,-2 -2,-2 -1,-1 -1)))</p> <p>GEOMETRYCOLLECTION(POINT(2 3),LINESTRING(2 3,3 4))</p> <p>GEOMETRYCOLLECTION EMPTY</p>"},{"location":"#todo","title":"TODO","text":"<ul> <li>Add tests</li> <li>Support all the types</li> <li>Add query options like sort by distance, overlap and etc.</li> <li>Develop dashboard</li> <li>Add cool pg queries and tilings ;)</li> </ul>"},{"location":"#thanks-to","title":"Thanks to","text":"<ul> <li>strapi-plugin-point-list for the idea of how to add a custom components to the strapi content types</li> <li>postgis knex plugin</li> <li>leaflet editor plugin</li> <li>strapi team</li> <li>and so many other stuff </li> </ul>"},{"location":"Feature%20Service/","title":"Feature Service","text":"<p>TBD</p>"},{"location":"Geometry%20Collection/","title":"Geometry Collection","text":""},{"location":"Geometry%20Collection/#geometry-collection","title":"Geometry Collection","text":"<ul> <li>GEOMETRYCOLLECTION(POINT(2 3),LINESTRING(2 3,3 4))  Not yet supported </li> <li>GEOMETRYCOLLECTION EMPTY  Not yet supported </li> </ul>"},{"location":"LineString%20Data/","title":"LineString Data","text":""},{"location":"LineString%20Data/#linestring-data-type-support","title":"LineString Data Type Support","text":"<ul> <li>LINESTRING(0 0,1 1,1 2) </li> </ul> <pre><code>    \"g_line\": {\n      \"columnType\": {\n        \"type\": \"specificType\",\n        \"args\": [\n          \"geometry(LINESTRING,4326)\"\n        ]\n      },\n           \"type\": \"customField\",\n      \"customField\": \"plugin::postgis.map\"\n    }\n\n\n</code></pre> <ul> <li> <p>LINESTRING EMPTY  Not yet supported</p> </li> <li> <p>MULTILINESTRING((0 0,1 1,1 2),(2 3,3 2,5 4))  Not yet supported</p> </li> </ul>"},{"location":"Point%20Data/","title":"Point Data","text":""},{"location":"Point%20Data/#point-data-type-support","title":"Point Data Type Support","text":"<ul> <li>POINT(0 0)</li> </ul> <pre><code>\"geom\": {\n      \"columnType\": {\n        \"type\": \"specificType\",\n        \"args\": [\n          \"geometry(POINT,4326)\"\n        ]\n      },\n          \"type\": \"customField\",\n      \"customField\": \"plugin::postgis.map\"\n    }\n\n\n\n</code></pre> <ul> <li>POINT Z (0 0 0)  Not yet supported </li> <li>POINT ZM (0 0 0 0)  Not yet supported</li> <li>POINT EMPTY  Not yet supported</li> <li>MULTIPOINT((0 0),(1 2))  Not yet supported</li> <li>MULTIPOINT Z ((0 0 0),(1 2 3))  Not yet supported</li> <li>MULTIPOINT EMPTY  Not yet supported</li> </ul>"},{"location":"Polygon%20Data/","title":"Polygon Data","text":""},{"location":"Polygon%20Data/#polygon-data-type-support","title":"Polygon Data Type Support","text":"<ul> <li>POLYGON((0 0,4 0,4 4,0 4,0 0),(1 1, 2 1, 2 2, 1 2,1 1))</li> </ul> <pre><code>    \"g_polygon\": {\n      \"columnType\": {\n        \"type\": \"specificType\",\n        \"args\": [\n          \"geometry(POLYGON,4326)\"\n        ]\n      },\n          \"type\": \"customField\",\n      \"customField\": \"plugin::postgis.map\"\n    }\n\n</code></pre> <ul> <li>MULTIPOLYGON(((0 0,4 0,4 4,0 4,0 0),(1 1,2 1,2 2,1 2,1 1)), ((-1 -1,-1 -2,-2 -2,-2 -1,-1 -1)))  Not yet supported </li> </ul>"},{"location":"Query%20Parameters/","title":"Query Parameters","text":"<p>TBD</p>"},{"location":"Tiling/","title":"Tiling","text":"<p>TBD</p>"}]}